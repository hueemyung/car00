#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <wiringPi.h>

void error_handling(char* message);

const int pinEcho = 22;
const int pinTrigger = 21;

int main(int argc, char* argv[])
{
	int clnt_sock;
	struct sockaddr_in serv_addr;
	char message[1024] = {0x00, };
	
	wiringPiSetup();

	pinMode(pinEcho, INPUT);
	pinMode(pinTrigger, OUTPUT);

	digitalWrite(pinTrigger, LOW);
	delay(30);
	
	clnt_sock = socket(PF_INET, SOCK_STREAM, 0);
	if(clnt_sock == -1)
		error_handling("socket error");

	memset(&serv_addr, 0, sizeof(serv_addr));
	
	serv_addr.sin_family = AF_INET;                
	serv_addr.sin_addr.s_addr = inet_addr(argv[1]);  
	serv_addr.sin_port = htons(atoi(argv[2]));

	if(connect(clnt_sock, (struct sockaddr*)&serv_addr, sizeof(serv_addr)) == -1)
		error_handling("connect error");
		
	char msg[] = "Car_Detected";
	char msg2[] = "Car_Disappear";
	
	while(1)
	{
		digitalWrite(pinTrigger, HIGH);
		delayMicroseconds(20);
		digitalWrite(pinTrigger, LOW);

		while(digitalRead(pinEcho)==LOW);
		long startTime = micros();

		while(digitalRead(pinEcho)==HIGH);
		long endTime = micros()-startTime;

		int distance = endTime / 58;


		
		if(distance <10) {
			write(clnt_sock, msg, sizeof(msg));
			printf("Send message :%s\n", msg);
		}
		else {
	        write(clnt_sock, msg2, sizeof(msg));
	        printf("Send message :%s\n", msg2);
		}
		delay(1000);
	}
	


	if(read(clnt_sock, message, sizeof(message)-1) == -1)
		error_handling("read error");
	printf("Message from server :%s\n", message);
   
    
	close(clnt_sock);
	return 0;
}
void error_handling(char* message)
{
	fputs(message, stderr);
	fputc('\n', stderr);
	exit(1);
}
